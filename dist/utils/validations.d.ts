interface ValidationUtils {
    isString: (value: any) => boolean;
    isNumber: (value: any) => boolean;
    isArray: (value: any) => boolean;
    isObject: (value: any) => boolean;
    isDate: (value: any) => boolean;
    isRegex: (value: any) => boolean;
    isBoolean: (value: any) => boolean;
    isNull: (value: any) => boolean;
    isUndefined: (value: any) => boolean;
    isNullOrUndefined: (value: any) => boolean;
    isEmail: (value: string) => boolean;
    isDateYYYYMMDD: (value: string) => boolean;
    isHex: (value: string) => boolean;
    lengthIs: (value: string | any[], length: number) => boolean;
    lengthNot: (value: string | any[], length: number) => boolean;
    lengthMin: (value: string | any[], min: number) => boolean;
    lengthMax: (value: string | any[], max: number) => boolean;
    isNumberGte: (value: any, gte: number) => boolean;
    isNumberGt: (value: any, gt: number) => boolean;
    isNumberLte: (value: any, lte: number) => boolean;
    isNumberLt: (value: any, lt: number) => boolean;
    isDateGte: (date1: any, date2: Date) => boolean;
    isDateGt: (date1: any, date2: Date) => boolean;
    isDateLte: (date1: any, date2: Date) => boolean;
    isDateLt: (date1: any, date2: Date) => boolean;
    hasKey: (obj: object, key: string) => boolean;
    is: (value: any, compareTo: any) => boolean;
    not: (value: any, not: any) => boolean;
    regexTested: (value: string, regexp: RegExp) => boolean;
    gt: (value: any, gt: number) => boolean;
    gte: (value: any, gte: number) => boolean;
    lte: (value: any, lte: number) => boolean;
    lt: (value: any, lt: number) => boolean;
    eq: (value: any, compareTo: any) => boolean;
    isNot: (value: any, not: any) => boolean;
    ne: (value: any, not: any) => boolean;
    neq: (value: any, not: any) => boolean;
    regex: (value: string, regexp: RegExp) => boolean;
    regexp: (value: string, regexp: RegExp) => boolean;
    test: (value: string, regexp: RegExp) => boolean;
}
declare class ValidationUtility implements ValidationUtils {
    isString(value: any): boolean;
    isNumber(value: any): boolean;
    isArray(value: any): boolean;
    isObject(value: any): boolean;
    isDate(value: any): boolean;
    isRegex(value: any): boolean;
    isBoolean(value: any): boolean;
    isNull(value: any): boolean;
    isUndefined(value: any): boolean;
    isNullOrUndefined(value: any): boolean;
    isEmail(value: string): boolean;
    isDateYYYYMMDD(value: string): boolean;
    isHex(value: string): boolean;
    lengthIs(value: string | any[], length: number): boolean;
    lengthNot(value: string | any[], length: number): boolean;
    lengthMin(value: string | any[], min: number): boolean;
    lengthMax(value: string | any[], max: number): boolean;
    isNumberGte(value: any, gte: number): boolean;
    isNumberGt(value: any, gt: number): boolean;
    isNumberLte(value: any, lte: number): boolean;
    isNumberLt(value: any, lt: number): boolean;
    isDateGte(date1: any, date2: Date): boolean;
    isDateGt(date1: any, date2: Date): boolean;
    isDateLte(date1: any, date2: Date): boolean;
    isDateLt(date1: any, date2: Date): boolean;
    hasKey(obj: object, key: string): boolean;
    is(value: any, compareTo: any): boolean;
    not(value: any, not: any): boolean;
    regexTested(value: string, regexp: RegExp): boolean;
    get gt(): (value: any, gt: number) => boolean;
    get gte(): (value: any, gte: number) => boolean;
    get lte(): (value: any, lte: number) => boolean;
    get lt(): (value: any, lt: number) => boolean;
    get eq(): (value: any, compareTo: any) => boolean;
    get isNot(): (value: any, not: any) => boolean;
    get ne(): (value: any, not: any) => boolean;
    get neq(): (value: any, not: any) => boolean;
    get regex(): (value: string, regexp: RegExp) => boolean;
    get regexp(): (value: string, regexp: RegExp) => boolean;
    get test(): (value: string, regexp: RegExp) => boolean;
}
declare const validations: ValidationUtility;
export default validations;
//# sourceMappingURL=validations.d.ts.map