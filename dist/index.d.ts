import { Schema } from "./Schema.js";
import ValidnoResult from "./engine/ValidnoResult.js";
export declare const validations: {
    isString(value: any): boolean;
    isNumber(value: any): boolean;
    isArray(value: any): boolean;
    isObject(value: any): boolean;
    isDate(value: any): boolean;
    isRegex(value: any): boolean;
    isBoolean(value: any): boolean;
    isNull(value: any): boolean;
    isUndefined(value: any): boolean;
    isNullOrUndefined(value: any): boolean;
    isEmail(value: string): boolean;
    isDateYYYYMMDD(value: string): boolean;
    isHex(value: string): boolean;
    lengthIs(value: string | any[], length: number): boolean;
    lengthNot(value: string | any[], length: number): boolean;
    lengthMin(value: string | any[], min: number): boolean;
    lengthMax(value: string | any[], max: number): boolean;
    isNumberGte(value: any, gte: number): boolean;
    isNumberGt(value: any, gt: number): boolean;
    isNumberLte(value: any, lte: number): boolean;
    isNumberLt(value: any, lt: number): boolean;
    isDateGte(date1: any, date2: Date): boolean;
    isDateGt(date1: any, date2: Date): boolean;
    isDateLte(date1: any, date2: Date): boolean;
    isDateLt(date1: any, date2: Date): boolean;
    hasKey(obj: object, key: string): boolean;
    is(value: any, compareTo: any): boolean;
    not(value: any, not: any): boolean;
    regexTested(value: string, regexp: RegExp): boolean;
    readonly gt: (value: any, gt: number) => boolean;
    readonly gte: (value: any, gte: number) => boolean;
    readonly lte: (value: any, lte: number) => boolean;
    readonly lt: (value: any, lt: number) => boolean;
    readonly eq: (value: any, compareTo: any) => boolean;
    readonly isNot: (value: any, not: any) => boolean;
    readonly ne: (value: any, not: any) => boolean;
    readonly neq: (value: any, not: any) => boolean;
    readonly regex: (value: string, regexp: RegExp) => boolean;
    readonly regexp: (value: string, regexp: RegExp) => boolean;
    readonly test: (value: string, regexp: RegExp) => boolean;
};
export { ValidnoResult, Schema };
export default Schema;
//# sourceMappingURL=index.d.ts.map